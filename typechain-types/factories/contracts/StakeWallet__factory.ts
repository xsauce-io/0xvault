/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakeWallet,
  StakeWalletInterface,
} from "../../contracts/StakeWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161030038038061030083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61026d806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063199e8acb14610030575b600080fd5b61004361003e3660046101a7565b610045565b005b61004d61012a565b80156100f5576001600160a01b03831663095ea7b38361007060016000196101ee565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044015b602060405180830381600087803b1580156100b757600080fd5b505af11580156100cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ef9190610213565b50505050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526000602483015284169063095ea7b39060440161009d565b6000546001600160a01b031633146101785760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b604482015260640160405180910390fd5b565b80356001600160a01b038116811461019157600080fd5b919050565b80151581146101a457600080fd5b50565b6000806000606084860312156101bc57600080fd5b6101c58461017a565b92506101d36020850161017a565b915060408401356101e381610196565b809150509250925092565b60008282101561020e57634e487b7160e01b600052601160045260246000fd5b500390565b60006020828403121561022557600080fd5b815161023081610196565b939250505056fea26469706673582212205e4bea227938cd97fa3173a58bd543ffb0f75aa461e60a6ebd7bc915ef0a7eaa64736f6c63430008090033";

type StakeWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeWallet__factory extends ContractFactory {
  constructor(...args: StakeWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakeWallet> {
    return super.deploy(owner_, overrides || {}) as Promise<StakeWallet>;
  }
  override getDeployTransaction(
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner_, overrides || {});
  }
  override attach(address: string): StakeWallet {
    return super.attach(address) as StakeWallet;
  }
  override connect(signer: Signer): StakeWallet__factory {
    return super.connect(signer) as StakeWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeWalletInterface {
    return new utils.Interface(_abi) as StakeWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakeWallet {
    return new Contract(address, _abi, signerOrProvider) as StakeWallet;
  }
}
